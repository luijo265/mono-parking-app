plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.parking.images'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'

	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'

	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

}

jacoco {
	toolVersion = "0.8.7"
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'CLASS'
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.5
			}
			includes = [
					'com.parking.images.domain.service.*'
			]
//			excludes = [
//					'com.parking.images.adapter.*',
//					'com.parking.images.persistence.*',
//					'com.parking.images.web.*',
//					'com.parking.images.domain.dto.*',
//					'com.parking.images.domain.reader.*',
//					'com.parking.images.domain.repository.*',
//					'com.parking.images.domain.ImageVehicule',
//					'com.parking.images.ParkingImagesApplication'
//			]
		}
	}
}

check.dependsOn jacocoTestCoverageVerification